#!/bin/bash

reflectorName "ADB interface"
reflectorId   "adb_interface"

associateCmd "adb"

function adbo() {
  local additionalargs=""
  [ -z "$ADB_SELECTED_DEVICE" ] && \
    additionalargs="" || \
    additionalargs="-s $ADB_SELECTED_DEVICE"
  adb $additionalargs $@
  return $?
}

function wait-for-device() {
  adbo wait-for-device
}

function wait-for-recovery() {
  adbo wait-for-recovery
}

function adb_push() {
  adbo push $@
}

function adb_pull() {
  adbo pull $@
}

function adb_execout() {
  adbo exec-out $@
}

function adb_shell() {
  adbo shell $@
}

function adb_reboot() {
  adbo reboot $@
}

function adb_root() {
  adbo root
  if [ $? -ne 0 ]; then
    logd "[ADB iface] Oops! Root failed..."
    run adb_err_msg adb_failed_root
    return 1
  fi

  local who="$(adb_shell whoami)"
  if [[ "$who" != *"root"* ]]; then
    logd "[ADB iface] Oops! No root!"
    run adb_err_msg adb_no_root
    return 1
  fi
  return 0
}

function adb_init() {
  logd "[ADB iface] adb init launched!"
  local resultcode=0
  echo -e "In order to initialize ADB correctly, sudo access is required." \
          "\nIf you are prompted for your password, please type it in" \
          "and confirm it with enter. The password ${EF_BOLD}will never${CL_RESET}" \
          "be saved or" \
          "given to third-parties in any way by this program!"
  sudo -p "Please enter your password now: " true
  sudo adb kill-server
  sleep 3
  while true; do
    sudo adb start-server
    [ $? -eq 0 ] && break
  done
  sleep 2
  echo "Checking devices..."
  # Just to make sure
  for i in {1..6}; do
    adb devices 2>&1 >/dev/null
  done
  local adbdevc="$(adb devices -l)"
  # DO NOT TOUCH IFS!!!
  IFS='
'
  local counter=0
  local stopfor=0
  local adbdevcf=""
  for device in $adbdevc; do
    if [ $counter -ge 1 ]; then
      adbdevcf="$adbdevcf[${counter}] ${device}\n"
      logt "Found device $device"
    fi
    counter=$(($counter+1))
  done
  if [ $counter -gt 2 ]; then
    local is_not_a_number=1
    echo "More than 1 device detected, please type in the number of the device you want to use."
    echo -e "$adbdevcf"
    while [ $is_not_a_number -eq 1 ]; do
      local usernumber
      echo -en "${EF_BOLD}Your choice: ${CL_RESET}"
      read usernumber
      [[ "$usernumber" =~ ^[0-9]+$ ]]
      is_not_a_number=$?
      [ $is_not_a_number -eq 1 ] && continue
      local second_counter=0
      for sdevice in $adbdevc; do
        if [ $second_counter -eq $usernumber ]; then
          export ADB_SELECTED_DEVICE=`echo -n "$sdevice" | cut -d ' ' -f 1`
          echo "$ADB_SELECTED_DEVICE selected."
          break
        fi
      second_counter=$(($second_counter+1))
      done
      unset usernumber
      stopfor=1
      break
    done
  fi
  logt "counter $counter"
  if [ $counter -le 1 ]; then
    echo "No devices found :("
    resultcode=1
  elif [ $counter -eq 2 ]; then
    echo "Found one device: $(adb_shell getprop ro.product.device)"
  fi
  unset counter
  unset IFS # PLEASE ALWAYS DO THIS
  return $resultcode
}

function reflect() {
  logd "[ADB iface] Hello."
  local resultcode=0
  case "$1" in
    init|reinit|reload|detect-devices)
      adb_init;;
    func)
      shift
      logd "[ADB iface] requested direct function call: $1"
      $@
    ;;
    *)
      adbo $@;;
  esac
  local resultcode=$?
  unset IFS
  return $resultcode
}
